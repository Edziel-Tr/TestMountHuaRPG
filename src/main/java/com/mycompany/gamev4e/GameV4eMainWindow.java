
package com.mycompany.gamev4e;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.stream.Collectors;


public class GameV4eMainWindow extends javax.swing.JFrame {

    private Player player;

     public GameV4eMainWindow(String playerName, String sectChoice) {
        initComponents();
        setTitle("Return Of The Mount Hua Sect - RPG");
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null); // Center window

        setupPlayer(playerName, sectChoice);
     }
    private void setupPlayer(String playerName, String sectChoice) {
        player = new Player();
        player.name = playerName.trim();
        player.sect = sectChoice;
        player.sectIndex = java.util.Arrays.asList(GameV4e.SECTS).indexOf(player.sect);
        for (String skill : GameV4e.SECT_SKILLS[player.sectIndex]) {
            player.skills.add(skill);
            player.skillMastery.put(skill, 1);
            player.skillExp.put(skill, 0);
            player.skillCooldown.put(skill, 0);
        }
        appendOutput("Welcome, " + player.name + " of the " + player.sect + "!");
    }

    private void appendOutput(String text) {
        jTextArea2.append(text + "\n");
        jTextArea2.setCaretPosition(jTextArea2.getDocument().getLength());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        InventoryBtn = new javax.swing.JButton();
        QuestBtn = new javax.swing.JButton();
        StatusBtn = new javax.swing.JButton();
        RestBtn = new javax.swing.JButton();
        PracticeSkillBtn = new javax.swing.JButton();
        AchievementsBtn = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        TravelBtn = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("Return Of The Mount Hua Sect - RPG");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 6, -1, -1));

        InventoryBtn.setText("Inventory");
        InventoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InventoryBtnActionPerformed(evt);
            }
        });
        jPanel1.add(InventoryBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 453, 88, 41));

        QuestBtn.setText("Quest");
        QuestBtn.setActionCommand("Quest");
        QuestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuestBtnActionPerformed(evt);
            }
        });
        jPanel1.add(QuestBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, 88, 41));

        StatusBtn.setText("Status");
        StatusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusBtnActionPerformed(evt);
            }
        });
        jPanel1.add(StatusBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 390, 88, 41));

        RestBtn.setText("Rest");
        RestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestBtnActionPerformed(evt);
            }
        });
        jPanel1.add(RestBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 453, 88, 41));

        PracticeSkillBtn.setText("Practice Skill");
        PracticeSkillBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PracticeSkillBtnActionPerformed(evt);
            }
        });
        jPanel1.add(PracticeSkillBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, 105, 41));

        AchievementsBtn.setText("Achievements");
        AchievementsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AchievementsBtnActionPerformed(evt);
            }
        });
        jPanel1.add(AchievementsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 454, -1, 40));

        ExitBtn.setText("Exit");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });
        jPanel1.add(ExitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(569, 452, -1, 43));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 70, -1, -1));

        TravelBtn.setText("Travel");
        TravelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TravelBtnActionPerformed(evt);
            }
        });
        jPanel1.add(TravelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 80, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AchievementsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AchievementsBtnActionPerformed
        // TODO add your handling code here:
       appendOutput("Achievements: " + GameV4e.achievements);
    }//GEN-LAST:event_AchievementsBtnActionPerformed

    private void StatusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusBtnActionPerformed
        // TODO add your handling code here:
       StringBuilder sb = new StringBuilder();
        sb.append("--- Status ---\n");
        sb.append("Name: ").append(player.name)
                .append("   Sect: ").append(player.sect)
                .append("   Realm: ").append(player.getRealm()).append("\n");
        sb.append("HP: ").append(player.hp).append("/").append(player.getMaxHp())
                .append("  Qi: ").append(player.qi).append("/").append(player.getMaxQi()).append("\n");
        sb.append("Atk: ").append(player.getAtk()).append("  Def: ").append(player.getDef())
                .append("  Silver: ").append(player.silver).append("  Weight: ").append(player.getTotalWeight()).append("\n");
        sb.append("Skills:\n");
        for (String skill : player.skills) {
            sb.append("- ")
                    .append(skill)
                    .append(" (Lv.")
                    .append(player.skillMastery.getOrDefault(skill, 1))
                    .append(") (CD:")
                    .append(player.skillCooldown.get(skill))
                    .append(")\n");
        }
        sb.append("Equipment: ");
        sb.append(player.equipped.values().stream().map(eqt -> eqt.name).collect(Collectors.joining(", ")));
        sb.append("\nInventory: ");
        sb.append(player.inventory.stream().map(ie -> ie.item.name + "(x" + ie.count + ")").collect(Collectors.joining(", ")));
        sb.append("\n");
        appendOutput(sb.toString());
    }//GEN-LAST:event_StatusBtnActionPerformed

    private void QuestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuestBtnActionPerformed
        // TODO add your handling code here:
        if (player.activeQuests.isEmpty()) {
            appendOutput("No active quests.");
            return;
        }
        appendOutput("Active Quests:");
        for (Quest q : player.activeQuests) {
            appendOutput("- " + q.title + (q.completed ? " (Completed)" : " (" + q.progress + "/" + q.needed + ")"));
            appendOutput("   " + q.description);
        
    }//GEN-LAST:event_QuestBtnActionPerformed
    }
    private void InventoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InventoryBtnActionPerformed
        // TODO add your handling code here:
        if (player.inventory.isEmpty()) {
            appendOutput("Inventory is empty.");
            return;
        }
        String[] invArr = player.inventory.stream()
                .map(ie -> ie.item.name + " (x" + ie.count + ") [" + ie.item.type + "]")
                .toArray(String[]::new);
        String selection = (String) JOptionPane.showInputDialog(
                this,
                "Select item to use/equip:",
                "Inventory",
                JOptionPane.PLAIN_MESSAGE,
                null,
                invArr,
                invArr[0]
        );
        if (selection == null) {
            return;
        }
        String itemName = selection.split(" \\(x")[0];
        // TODO: Implement item usage/equip logic like Player.inventoryMenu()
        appendOutput("Used/equipped: " + itemName + " (implement logic in Player class!)");

    }//GEN-LAST:event_InventoryBtnActionPerformed

    private void RestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestBtnActionPerformed
        // TODO add your handling code here:
        player.hp = player.getMaxHp();
        player.qi = player.getMaxQi();
        appendOutput("You rest and recover.");

    }//GEN-LAST:event_RestBtnActionPerformed

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_ExitBtnActionPerformed

    private void PracticeSkillBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PracticeSkillBtnActionPerformed
        // TODO add your handling code here:
        if (player.skills.isEmpty()) {
            appendOutput("No skills to practice.");
            return;
        }
        String skill = (String) JOptionPane.showInputDialog(
                this,
                "Which skill to practice?",
                "Practice Skill",
                JOptionPane.PLAIN_MESSAGE,
                null,
                player.skills.toArray(),
                player.skills.get(0)
        );
        if (skill == null) {
            return;
        }
        int mastery = player.skillMastery.get(skill) + 1;
        player.skillMastery.put(skill, mastery);
        player.qi = Math.max(0, player.qi - 5);
        GameV4e.achievements.add("Practiced " + skill);
        appendOutput("You practice " + skill + " and mastery improves to level " + mastery + "!");

    }//GEN-LAST:event_PracticeSkillBtnActionPerformed

    private void TravelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TravelBtnActionPerformed
        Object locChoice = JOptionPane.showInputDialog(
                this,
                "Where to?",
                "Travel",
                JOptionPane.PLAIN_MESSAGE,
                null,
                GameV4e.LOC_NAMES,
                GameV4e.LOC_NAMES[0]
        );
        if (locChoice == null) {
            return;
        }
        String locName = locChoice.toString();
        Location loc = java.util.Arrays.stream(GameV4e.LOCATIONS)
                .filter(l -> l.name.equals(locName)).findFirst().orElse(null);
        if (loc == null) {
            appendOutput("Location not found.");
            return;
        }
        appendOutput("-- " + loc.name + " --");
        appendOutput(loc.lore + (GameV4e.SECT_LORE.containsKey(loc.name) ? " " + GameV4e.SECT_LORE.get(loc.name) : ""));
    }//GEN-LAST:event_TravelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            
              String playerName = JOptionPane.showInputDialog(null, "Enter your martial name:");
        if (playerName == null || playerName.isBlank()) {
            return; // Don't start the window if setup is cancelled
        }
        Object sectChoice = JOptionPane.showInputDialog(
                null,
                "Choose your sect:",
                "Sect Selection",
                JOptionPane.PLAIN_MESSAGE,
                null,
                GameV4e.SECTS,
                GameV4e.SECTS[0]
        );
        if (sectChoice == null) {
            return; // Don't start the window if cancelled
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex1) {
            java.util.logging.Logger.getLogger(GameV4eMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex2) {
            java.util.logging.Logger.getLogger(GameV4eMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex3) {
            java.util.logging.Logger.getLogger(GameV4eMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex4) {
            java.util.logging.Logger.getLogger(GameV4eMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               GameV4eMainWindow window = new GameV4eMainWindow(playerName, sectChoice.toString());
                 window.setVisible(true);
            }
        });

    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AchievementsBtn;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton InventoryBtn;
    private javax.swing.JButton PracticeSkillBtn;
    private javax.swing.JButton QuestBtn;
    private javax.swing.JButton RestBtn;
    private javax.swing.JButton StatusBtn;
    private javax.swing.JButton TravelBtn;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
